import { List, Switch, NavBar, Button } from 'antd-mobile';
import { ErrorBlock as AntdErrorBlock } from 'antd-mobile';
import { useFeatureFlags } from '../hooks/useFeatureFlags';
import { LoadingSpinner } from '../components/LoadingSpinner';
import type { FeatureFlagKey } from '../types';
import { useNavigate } from 'react-router-dom';

export const Settings = () => {
  const { isEnabled, enable, disable, loading, error, reset } = useFeatureFlags();
  const navigate = useNavigate();

  const handleToggle = (key: FeatureFlagKey, checked: boolean) => {
    if (checked) {
      enable(key);
    } else {
      disable(key);
    }
  };

  if (loading) {
    return (
      <div className="settings-page">
        <NavBar onBack={() => navigate('/')} className="settings-navbar">
          –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
        </NavBar>
        <LoadingSpinner message="–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å..." />
      </div>
    );
  }

  if (error) {
    return (
      <div className="settings-page">
        <NavBar onBack={() => navigate('/')} className="settings-navbar">
          –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
        </NavBar>
        <div className="error-container">
          <AntdErrorBlock
            status="default"
            title="–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è"
            description={error}
          />
        </div>
      </div>
    );
  }

  return (
    <div className="settings-page">
      <NavBar onBack={() => navigate('/')} className="settings-navbar">
        –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
      </NavBar>
      <div className="settings-content">
        <div className="settings-list-container">
          <List
            header={<span className="settings-section-title">Feature Flags</span>}
            className="settings-list"
          >
            <List.Item
              className="settings-list-item"
              prefix={<span className="settings-item-icon">üó∫Ô∏è</span>}
              extra={
                <Switch
                  className="settings-switch"
                  checked={isEnabled('passengerRouteMap')}
                  onChange={(checked) => handleToggle('passengerRouteMap', checked)}
                  style={{
                    '--checked-color': 'var(--ridesafe-primary)',
                    '--height': '28px',
                    '--width': '54px',
                  } as React.CSSProperties}
                />
              }
            >
              <div className="setting-item-content">
                <p className="setting-title">–ö–∞—Ä—Ç–∞ –ø–∞—Å–∞–∂–∏—Ä–∞</p>
                <p className="setting-description">–ü–æ–∫–∞–∑—É–≤–∞—Ç–∏ –∫–∞—Ä—Ç—É –º–∞—Ä—à—Ä—É—Ç—É –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ –ø–∞—Å–∞–∂–∏—Ä–∞</p>
              </div>
            </List.Item>
            <List.Item
              className="settings-list-item"
              prefix={<span className="settings-item-icon">üöó</span>}
              extra={
                <Switch
                  className="settings-switch"
                  checked={isEnabled('driverRouteMapPreview')}
                  onChange={(checked) => handleToggle('driverRouteMapPreview', checked)}
                  style={{
                    '--checked-color': 'var(--ridesafe-primary)',
                    '--height': '28px',
                    '--width': '54px',
                  } as React.CSSProperties}
                />
              }
            >
              <div className="setting-item-content">
                <p className="setting-title">–ü—Ä–µ–≤—å—é –≤–æ–¥—ñ—è</p>
                <p className="setting-description">–ü–æ–∫–∞–∑—É–≤–∞—Ç–∏ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –ø–µ—Ä–µ–≥–ª—è–¥ –∫–∞—Ä—Ç–∏ –¥–ª—è –≤–æ–¥—ñ—è</p>
              </div>
            </List.Item>
            <List.Item
              className="settings-list-item"
              prefix={<span className="settings-item-icon">‚öôÔ∏è</span>}
              extra={
                <Switch
                  className="settings-switch"
                  checked={isEnabled('showSettings')}
                  onChange={(checked) => handleToggle('showSettings', checked)}
                  style={{
                    '--checked-color': 'var(--ridesafe-primary)',
                    '--height': '28px',
                    '--width': '54px',
                  } as React.CSSProperties}
                />
              }
            >
              <div className="setting-item-content">
                <p className="setting-title">–ü–æ–∫–∞–∑—É–≤–∞—Ç–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è</p>
                <p className="setting-description">–ü–æ–∫–∞–∑—É–≤–∞—Ç–∏ –∫–Ω–æ–ø–∫—É –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è</p>
              </div>
            </List.Item>
          </List>
          <div className="settings-controls">
            <Button
              className="reset-button"
              onClick={reset}
              color="danger"
              size="small"
              fill="outline"
            >
              –°–∫–∏–Ω—É—Ç–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
            </Button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Settings;